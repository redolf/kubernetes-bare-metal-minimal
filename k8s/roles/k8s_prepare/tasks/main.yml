---
- name: "Создание директории .ssh"
  file:
    path: ~/.ssh
    state: directory
    mode: '0700'

- name: "Добавление публичного ключа в authorized_keys"
  authorized_key:
    user: "{{ user_1 }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: "Выключаем файл подкачки"
  mount:
    path: "{{ item }}"
    fstype: "swap"
    state: "absent"
  loop:
    - "swap"
    - "none"

- name: "Выключаем файл подкачки"
  command: "swapoff -a"
  changed_when: false

- name: "Обновление пакетов"
  apt:
    upgrade: yes
    update_cache: yes

- name: "Загружаем модуль br_netfilter и overlay в ядро"
# Модуль br_netfilter расширяет возможности netfilter
  modprobe:
    name: "{{ item }}"
    state: "present"
  loop:
    - "br_netfilter"
    - "overlay"

- name: "Добавляем модуль br_netfilter для автозагрузки" 
  copy:
    content: |
      br_netfilter
      overlay
    dest: "/etc/modules-load.d/containerd.conf"
    mode: "0644"

- name: "Включаем обработку трафика через bridge в netfilter"
  sysctl:
    name: "{{ item.split('=')[0] }}"
    value: "{{ item.split('=')[1] }}"
    sysctl_file: "/etc/sysctl.d/99-kubernetes-cri.conf"
    state: present
  loop:
  - "net.ipv4.ip_forward=1"
  - "net.bridge.bridge-nf-call-iptables=1"
  - "net.bridge.bridge-nf-call-ip6tables=1"

- name: "Установка containerd"
  become: true
  apt:
    update_cache: yes
    name: containerd
    state: present

- name: "Остановка containerd"
  become: true
  systemd:
    name: containerd
    state: stopped

- name: "Загрузка архива containerd-{{ containerd_version }} с Github"
  become: true
  get_url:
    url: https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz
    dest: /home/{{ user_1 }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz

- name: "Распаковка архива containerd-{{ containerd_version }} с Github"
  unarchive:
    src: /home/{{ user_1 }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz
    dest: /home/{{ user_1 }}
    remote_src: yes
    extra_opts: "--gzip"

- name: "Копируем файлы containerd-{{ containerd_version }} в /usr/bin"
  become: true
  copy:
    remote_src: yes
    src: /home/{{ user_1 }}/bin/
    dest: /usr/bin/
    force: yes

- name: "Удаляем каталог от распаковки containerd-{{ containerd_version }} и архив"
  file:
    path: "{{ item }}"
    state: absent
    force: yes
  loop:
    - "/home/{{ user_1 }}/bin"
    - "/home/{{ user_1 }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz"

- name: "Создание директории /etc/containerd"
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: "Создание config.toml для containerd" 
  copy:
    content: |
      version = 2
      [plugins]
        [plugins."io.containerd.grpc.v1.cri"]
          [plugins."io.containerd.grpc.v1.cri".containerd]
            discard_unpacked_layers = true
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                runtime_type = "io.containerd.runc.v2"
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                  SystemdCgroup = true

    dest: "/etc/containerd/config.toml"

- name: "Запуск containerd"
  become: true
  systemd:
    name: containerd
    state: started

- name: "Добавление ключа репозитория Kubernetes"
  apt_key:
    url: "{{ k8s_repo_key }}"
    state: present

- name: "Добавление репозитория Kubernetes в apt"
  apt_repository:
    repo: "{{ k8s_repo }}"
    state: present

- name: "Установка бинарей: kubeadm, kubectl, kubelet"
  apt:
    name: "{{ item+'='+k8s_version+'-00' if k8s_version is defined else item }}"
    state: "present"
    allow_downgrade: true
  loop:
    - kubeadm
    - kubectl
    - kubelet

- name: "Установка маркера hold для пакетов kubelet, kubeadm и kubectl"
  command: sudo apt-mark hold kubelet kubeadm kubectl

- name: "Установим socket-file для containerd"
  command: sudo crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock
